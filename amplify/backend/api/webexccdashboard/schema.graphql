type OptionMenuType {
  msg: String
  type: OptionTypeENUM
  value: String
}

type MenuType {
  msg: String
  type: MenuTypeENUM
  value: String
}

type GroupModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  fullname: String
  abbreviatedname: String
  Managers: [ManagerModel] @manyToMany(relationName: "GroupModelManagerModel")
}

type QueueModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  Group: GroupModel @hasOne
}

enum RoleEnum {
  ADMIN
  MANAGER
  VIEW
}

type ManagerModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: AWSEmail
  telephone: AWSPhone
  profilepic: AWSURL
  role: RoleEnum
  ContactCenters: [ContactCenterModel] @manyToMany(relationName: "ContactCenterModelManagerModel")
  Groups: [GroupModel] @manyToMany(relationName: "GroupModelManagerModel")
}

enum OptionTypeENUM {
  MSG
  FORWARD
  QUEUE
}

type SubmenuType {
  option0: OptionMenuType
  option1: OptionMenuType
  option2: OptionMenuType
  option3: OptionMenuType
  option4: OptionMenuType
  option5: OptionMenuType
  option6: OptionMenuType
  option7: OptionMenuType
  option8: OptionMenuType
  option9: OptionMenuType
}

enum MenuTypeENUM {
  MSG
  FORWARD
  QUEUE
  SUBMENU
}

type ContactCenterModel @model @auth(rules: [{allow: public}]) {
  id: ID!
  mainnumber: String!
  menu0: MenuType
  menu1: MenuType
  menu2: MenuType
  menu3: MenuType
  menu4: MenuType
  menu5: MenuType
  menu6: MenuType
  menu7: MenuType
  menu8: MenuType
  menu9: MenuType
  holiday: [String]
  secondarytodclose: [String]
  secondarytodopen: [String]
  daysopen: [String]
  daystodopen: [String]
  daystodclose: [String]
  welcomeprompt: String
  afterhours: MenuType
  ccdescription: String
  ccname: String
  defaultroute: String
  holidayoption: MenuType
  isoverride: Boolean
  submenu2: SubmenuType
  welcomeprompt_sp: String
  submenu2_sp: SubmenuType
  menu0_sp: MenuType
  menu1_sp: MenuType
  menu2_sp: MenuType
  menu3_sp: MenuType
  menu4_sp: MenuType
  menu5_sp: MenuType
  menu6_sp: MenuType
  menu7_sp: MenuType
  menu8_sp: MenuType
  menu9_sp: MenuType
  version: String
  Managers: [ManagerModel] @manyToMany(relationName: "ContactCenterModelManagerModel")
  AssignedGroup: GroupModel @hasOne
  override: MenuType
  secondaryclose: MenuType
  updateduser: String
}
 